# Generated by CMake 3.6.0-rc1

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget ORB_SLAM DBoW2)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target ORB_SLAM
add_library(ORB_SLAM SHARED IMPORTED)

# Create imported target DBoW2
add_library(DBoW2 SHARED IMPORTED)

# Import target "ORB_SLAM" for configuration "Release"
set_property(TARGET ORB_SLAM APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(ORB_SLAM PROPERTIES
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "gomp;opencv_core;opencv_androidcamera;opencv_flann;opencv_imgproc;opencv_highgui;opencv_features2d;opencv_calib3d;opencv_photo;opencv_video;opencv_videostab;opencv_ts;opencv_ml;opencv_objdetect;opencv_ocl;opencv_superres;opencv_stitching;opencv_legacy;opencv_contrib;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/external/android/BoostforAndroid/build/lib/libboost_system.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/external/android/BoostforAndroid/build/lib/libboost_thread.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/suitesparse/build/lib/libcholmod.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/suitesparse/build/lib/libamd.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/suitesparse/build/lib/libcolamd.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/suitesparse/build/lib/libcamd.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/suitesparse/build/lib/libccolamd.a;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/suitesparse/build/lib/libsuitesparseconfig.a;DBoW2;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/slam/Thirdparty/g2o/lib/libg2o.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_core.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_stuff.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_solver_cholmod.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_solver_dense.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_solver_pcg.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_solver_structure_only.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_solver_eigen.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_data.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_icp.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_sba.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_sclam2d.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_sim3.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_sclam2d.so;/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/g2o/lib/libg2o_types_slam3d.so"
  IMPORTED_LOCATION_RELEASE "/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/slam/lib/libORB_SLAM.so"
  IMPORTED_SONAME_RELEASE "libORB_SLAM.so"
  )

# Import target "DBoW2" for configuration "Release"
set_property(TARGET DBoW2 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(DBoW2 PROPERTIES
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "gomp;opencv_core;opencv_androidcamera;opencv_flann;opencv_imgproc;opencv_highgui;opencv_features2d;opencv_calib3d;opencv_photo;opencv_video;opencv_videostab;opencv_ts;opencv_ml;opencv_objdetect;opencv_ocl;opencv_superres;opencv_stitching;opencv_legacy;opencv_contrib"
  IMPORTED_LOCATION_RELEASE "/home/sarthak/Desktop/ORB-SLAM-Android/slam_ext/build.android/slam/lib/libDBoW2.so"
  IMPORTED_SONAME_RELEASE "libDBoW2.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
